{"ast":null,"code":"var _jsxFileName = \"/home/phuong/shared/code/git/github/online-drawing/client/src/components/Tool.js\";\nimport React, { useContext } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { Context } from '../store/store';\nimport { types } from '../store/types';\nimport Draggable from 'react-draggable';\nimport { Button, Paper } from '@material-ui/core';\n\nfunction Tool() {\n  const _useContext = useContext(Context),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  const pickColor = (color, event) => {\n    dispatch({\n      type: types.SET_COLOR,\n      payload: color.hex\n    });\n  };\n\n  const clearDrawing = () => {\n    dispatch({\n      type: types.SET_CLEAR,\n      payload: true\n    });\n  };\n\n  return React.createElement(Draggable, {\n    bounds: \"parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      display: \"inline-flex\",\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(TwitterPicker, {\n    color: state.color,\n    onChangeComplete: pickColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      margin: 'auto'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"Clear\",\n    onClick: clearDrawing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Clear \")));\n}\n\nexport default Tool;","map":{"version":3,"sources":["/home/phuong/shared/code/git/github/online-drawing/client/src/components/Tool.js"],"names":["React","useContext","TwitterPicker","Context","types","Draggable","Button","Paper","Tool","state","dispatch","pickColor","color","event","type","SET_COLOR","payload","hex","clearDrawing","SET_CLEAR","display","backgroundColor","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;AAEA,SAASC,IAAT,GAAgB;AAAA,sBACcP,UAAU,CAACE,OAAD,CADxB;AAAA,QACNM,KADM,eACNA,KADM;AAAA,QACCC,QADD,eACCA,QADD;;AAGd,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClCH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEV,KAAK,CAACW,SAAd;AAAyBC,MAAAA,OAAO,EAAEJ,KAAK,CAACK;AAAxC,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEV,KAAK,CAACe,SAAd;AAAyBH,MAAAA,OAAO,EAAE;AAAlC,KAAD,CAAR;AACD,GAFD;;AAGA,SACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAE,aAAV;AAAyBC,MAAAA,eAAe,EAAE;AAA1C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEZ,KAAK,CAACG,KADf;AAEE,IAAA,gBAAgB,EAAED,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAC,OAJZ;AAKE,IAAA,OAAO,EAAEJ,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF,CADF;AAkBD;;AAED,eAAeV,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { TwitterPicker } from 'react-color'\nimport { Context } from '../store/store';\nimport { types } from '../store/types'\nimport Draggable from 'react-draggable';\nimport { Button, Paper } from '@material-ui/core'\n\nfunction Tool() {\n  const { state, dispatch } = useContext(Context)\n\n  const pickColor = (color, event) => {\n    dispatch({ type: types.SET_COLOR, payload: color.hex })\n  }\n  const clearDrawing = () => {\n    dispatch({ type: types.SET_CLEAR, payload: true })\n  }\n  return (\n    <Draggable bounds='parent'>\n      <Paper\n        style={{display: \"inline-flex\", backgroundColor: \"white\" }}>\n        <TwitterPicker\n          color={state.color}\n          onChangeComplete={pickColor}\n        />\n        <Button\n          style={{ margin: 'auto' }}\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"Clear\"\n          onClick={clearDrawing}\n        > Clear </Button>\n      </Paper>\n    </Draggable>\n  )\n}\n\nexport default Tool"]},"metadata":{},"sourceType":"module"}