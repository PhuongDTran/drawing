{"version":3,"sources":["store/types.js","store/store.js","consts.js","components/Tool.js","components/Canvas.js","components/Display.js","App.js","index.js"],"names":["types","SET_COLOR","SET_WIDTH","SET_CLEAR","SET_ROOM","SET_ERASER","SET_PEN","ALL","initialState","color","width","clear","room","reducer","state","action","type","payload","Context","React","createContext","ToolConsts","ROOM_LENGTH","CHARSET","CanvasConsts","BROADCAST","Tool","useContext","dispatch","useState","roomCode","setRoomCode","open","setOpen","_color","useRef","_width","closeDialog","Fragment","bounds","Paper","style","position","display","backgroundColor","flexDirection","triangle","onChangeComplete","event","hex","Tooltip","title","Button","variant","onClick","current","marginRight","code","randomstring","generate","length","charset","alert","Input","value","placeholder","onMouseDown","e","stopPropagation","onChange","target","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","socket","io","memo","canvasRef","is_drawing","setIsDrawing","current_path","setCurrentPath","useEffect","canvas","offsetWidth","height","offsetHeight","ctx","getContext","clearRect","emit","points","on","data","strokeStyle","lineWidth","i","drawLine","start","end","beginPath","moveTo","x","y","lineTo","stroke","startDrawing","pos","getMousePos","prev","draw","stopDrawing","evt","rect","getBoundingClientRect","changedTouches","clientX","left","clientY","top","className","cursor","ref","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","Display","useReducer","showTool","setShowTool","IsDesktop","useMediaQuery","minWidth","Provider","Fab","size","bottom","right","App","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7a92acf.chunk.js","sourcesContent":["export const types = {\n  SET_COLOR:\"SET_COLOR\",\n  SET_WIDTH: \"SET_WIDTH\",\n  SET_CLEAR: \"SET_CLEAR\",\n  SET_ROOM: \"SET_ROOM\",\n  SET_ERASER: \"SET_ERASER\",\n  SET_PEN: \"SET_PEN\",\n  ALL: \"ALL\"\n}","import React from 'react'\nimport {types} from './types'\n\nexport const initialState = {\n  color: \"#B80000\",\n  width: 2,\n  clear: false,\n  room: \"\"\n}\n\nexport function reducer (state, action) {\n  switch (action.type) {\n    case types.SET_COLOR:\n      return {...state, color: action.payload}\n    case types.SET_WIDTH:\n      return {...state, width: action.payload}\n    case types.SET_CLEAR:\n      return {...state, clear: action.payload}\n    case types.SET_ROOM:\n      return {...state, room: action.payload}\n    case types.SET_ERASER:\n      return {...state, color:\"#ffffff\", width: 50}\n    case types.SET_PEN:\n      return {...state, color: action.payload.color, width: action.payload.width}\n    // case types.ALL:\n    //   // console.log(action.payload)\n    //   return {...state, color: action.payload.color, width: action.payload.width}\n    default:\n      return initialState\n  }\n}\n\nexport const Context = React.createContext(null)\n\n","export const server = {\n  URL:\"http://nodejs.phuongtran.me\"\n}\n\nexport const ToolConsts = {\n  ROOM_LENGTH: 6,\n  CHARSET: '0123456789'\n}\n\nexport const CanvasConsts = {\n  BROADCAST: \"broadcast\"\n}","import React, { useContext, useState, useRef } from 'react'\n\nimport { Context } from '../store/store';\nimport { types } from '../store/types'\n\n// components\nimport { GithubPicker } from 'react-color'\nimport Draggable from 'react-draggable';\nimport { Button, Paper, Input, Tooltip } from '@material-ui/core'\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\n\n//icons\nimport EraserIcon from '@material-ui/icons/Clear';\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\nimport PenIcon from '@material-ui/icons/Create'\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare'\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom'\n\nimport randomstring from 'randomstring'\nimport { ToolConsts } from '../consts';\n\n\n\nfunction Tool() {\n  // this is global state. Go to ../store/store.js to see what state is available \n  const { state, dispatch } = useContext(Context)\n  // room code user enters into the HTML Input tag\n  const [roomCode, setRoomCode] = useState(\"\")\n  // open/close dialog\n  const [open, setOpen] = useState(false)\n\n  // \n  const _color = useRef(null)\n  const _width = useRef(null)\n\n  const pickColor = (color, event) => {\n    dispatch({ type: types.SET_COLOR, payload: color.hex })\n  }\n\n  const clearDrawing = () => {\n    dispatch({ type: types.SET_CLEAR, payload: true })\n  }\n\n  // generate and update room code in global state\n  const handleShare = () => {\n    let code = randomstring.generate({ length: ToolConsts.ROOM_LENGTH, charset: ToolConsts.CHARSET })\n    dispatch({ type: types.SET_ROOM, payload: code })\n    setOpen(true)\n  }\n\n  const handleRoomInput = () => {\n    if (roomCode) {\n      alert(\"Ok:)\")\n      dispatch({ type: types.SET_ROOM, payload: roomCode })\n    }\n  }\n\n  // use entered room code\n  const roomChange = (e) => {\n    setRoomCode(e.target.value)\n  }\n\n  const closeDialog = () => {\n    setOpen(false)\n  }\n  const setEraser = () => {\n    _color.current = state.color\n    _width.current = state.width\n    dispatch({ type: types.SET_ERASER })\n  }\n\n  const setPen = () => {\n    dispatch({ type: types.SET_PEN, payload: { color: _color.current, width: _width.current } })\n  }\n\n  return (\n    <React.Fragment>\n      <Draggable bounds='parent'>\n        <Paper style={{ position: \"absolute\", display: \"inline-flex\", backgroundColor: \"white\", flexDirection: \"column\" }}>\n          {/* <TwitterPicker triangle=\"hide\" color={state.color} onChangeComplete={pickColor} /> */}\n          <GithubPicker triangle=\"hide\" color={state.color} onChangeComplete={pickColor} />\n          <div style={{ display: 'flex', flexDirection: \"row\" }}>\n            <Tooltip title=\"Clear Canvas\">\n              <Button\n                variant=\"contained\" color=\"secondary\"\n                onClick={clearDrawing}\n              > <DeleteIcon /> </Button>\n            </Tooltip>\n            <Tooltip title=\"Eraser\">\n              <Button\n                variant=\"contained\" color=\"default\"\n                onClick={setEraser}\n              > <EraserIcon /> </Button>\n            </Tooltip>\n            <Tooltip title=\"Pen\">\n              <Button\n                variant=\"contained\" color=\"primary\"\n                onClick={setPen}\n              > <PenIcon /> </Button>\n            </Tooltip>\n          </div>\n          <div style={{ display: 'flex', flexDirection: \"row\" }}>\n            <Tooltip title=\"Share your canvas\">\n              <Button\n                style={{ marginRight: \"1%\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleShare}\n              > <ScreenShareIcon /> </Button>\n            </Tooltip>\n            <Tooltip title=\"Join canvas by entering a room code\">\n              <Button\n                style={{ marginRight: '1%' }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleRoomInput}\n              > <MeetingRoomIcon /> </Button>\n            </Tooltip>\n            <Input\n              value={roomCode}\n              placeholder=\"Room Code\"\n              // https://github.com/atlassian/react-beautiful-dnd/issues/110#issuecomment-331304943\n              onMouseDown={e => e.stopPropagation()}\n              onChange={roomChange} />\n          </div>\n        </Paper>\n      </Draggable>\n\n      {/* a dialog display the generated room code when user clicks share button */}\n      <Dialog open={open} onClose={closeDialog}>\n        <DialogTitle>{\"Share this room code\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{state.room}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\"> Close </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n\nexport default Tool","import React, { useRef, useState, useContext, useEffect } from 'react'\nimport { Context } from '../store/store'\nimport { types } from '../store/types'\n\nimport io from 'socket.io-client'\nimport { server, CanvasConsts } from '../consts'\n\nconst socket = io(server.URL)\n\nfunction Canvas() {\n\n  const canvasRef = useRef(null)\n  // this is global state. Go to ../store/store.js to see what state is available \n  const { state, dispatch } = useContext(Context)\n  // is user drawing?\n  const [is_drawing, setIsDrawing] = useState(false)\n  // the current path. a path is defined when user press the mouse, drag, and release.\n  const [current_path, setCurrentPath] = useState([])\n\n\n  // make canvas wider\n  useEffect(() => {\n    const canvas = canvasRef.current\n    //https://stackoverflow.com/questions/10214873/make-canvas-as-wide-and-as-high-as-parent\n    canvas.width = canvas.offsetWidth\n    canvas.height = canvas.offsetHeight\n  }, [])\n\n  // clear canvas\n  useEffect(() => {\n    if (state.clear) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      dispatch({ type: types.SET_CLEAR, payload: false })\n      socket.emit(CanvasConsts.BROADCAST, { state: state, points: [] })\n    }\n  }, [state.clear, dispatch])\n\n  //listening on server socket\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n\n    socket.on(state.room, data => {\n      if (data.state.clear) {\n        // clear the entire canvas\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      }\n\n      // set color and width which are sent from the host (who shares the canvas)\n      ctx.strokeStyle = data.state.color\n      ctx.lineWidth = data.state.width\n\n      for (let i = 0; i < data.points.length; i++)\n        if (data.points[i + 1]) {\n          drawLine(ctx, data.points[i], data.points[i + 1])\n        }\n    })\n  }, [state.room])\n\n  // draw a line from start to end\n  const drawLine = (ctx, start, end) => {\n    ctx.beginPath()\n    ctx.moveTo(start.x, start.y)\n    ctx.lineTo(end.x, end.y)\n    ctx.stroke()\n  }\n\n  // triggered when the mouse pressed down\n  // get current mouse's location, and signal drawing has begun\n  const startDrawing = (e) => {\n    setIsDrawing(true)\n    const canvas = canvasRef.current\n    let pos = getMousePos(canvas, e)\n    setCurrentPath(prev => [...prev, pos])\n  }\n\n  // draw lines to current mouse location\n  const draw = (e) => {\n    if (is_drawing) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n      // make sure using local color and width when drawing\n      ctx.strokeStyle = state.color\n      ctx.lineWidth = state.width\n      if (current_path.length >= 2) {\n        drawLine(ctx, current_path[current_path.length - 2], current_path[current_path.length - 1])\n      }\n      let pos = getMousePos(canvas, e)\n      setCurrentPath(prev => [...prev, pos])\n    }\n  }\n\n  // signal drawing has stoped\n  const stopDrawing = () => {\n    if (state.room) {\n      // only emit when a path finished\n      socket.emit(CanvasConsts.BROADCAST, { state: state, points: current_path })\n    }\n    setIsDrawing(false)\n    setCurrentPath([])\n  }\n\n  // https://stackoverflow.com/questions/17130395/real-mouse-position-in-canvas\n  function getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    if (evt.changedTouches) {\n      return {\n        x: evt.changedTouches[0].clientX - rect.left,\n        y: evt.changedTouches[0].clientY - rect.top\n      }\n    }\n\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    }\n  }\n\n  return (\n    <div className='canvas'   style={{width:\"100vw\", height: \"100vh\",  cursor: \"pointer\"}}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onTouchStart={startDrawing}\n        onTouchMove={draw}\n        onTouchEnd={stopDrawing}\n      />\n    </div>\n  )\n}\n\nexport default React.memo(Canvas)","import React, { useReducer, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\n\nimport { Fab } from '@material-ui/core'\nimport DownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { Context, initialState, reducer } from '../store/store'\n\n// components\nimport Tool from './Tool'\nimport Canvas from './Canvas'\n\nfunction Display() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const [showTool, setShowTool] = useState(false)\n  const IsDesktop = useMediaQuery({ minWidth: 1024 })\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <React.Fragment>\n        {(IsDesktop || showTool) && <Tool />}\n        {!IsDesktop && (\n          <Fab\n            size=\"small\"\n            style={{ position: 'absolute', bottom: '1%', right: '1%', backgroundColor: '#6aaf6a', color: 'white' }}\n            onClick={() => setShowTool(!showTool)}>\n            {showTool ? <DownIcon /> : <UpIcon />}\n          </Fab>\n        )}\n        <Canvas />\n      </React.Fragment>\n    </Context.Provider>\n  )\n}\n\nexport default Display;","import React from 'react';\n\nimport Display from './components/Display'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{textAlign: 'center', width: '100vw', height: '100vh'}}>\n      <Display/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}